# Remote DB/API settings
airtable.server.base_url=https://api.airtable.com/v0
airtable.api.token=${project.findProperty('AIRTABLE_API_TOKEN')}
airtable.base.id=${project.findProperty('AIRTABLE_BASE_ID')}
airtable.tables.persons=Guests and Members
airtable.tables.meetings=Meetings
airtable.tables.duesPeriods=Dues
mailchimp.server.id=${project.findProperty('MAILCHIMP_SERVER_ID')}
mailchimp.server.base_url=https://{mailchimp.server.id}.api.mailchimp.com/3.0
mailchimp.api.token=${project.findProperty('MAILCHIMP_API_TOKEN')}
# Spring settings
spring.datasource.url=jdbc:mysql://localhost:3306/speakupcambridge-database?useSSL=false&serverTimezone=UTC
spring.datasource.username=${project.findProperty('DB_USERNAME')}
spring.datasource.password=${project.findProperty('DB_PASSWORD')}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Hibernate settings for DDL auto - this should probably change once the DB dust settles
spring.jpa.hibernate.ddl-auto=update
spring.datasource.initialization-mode=always
